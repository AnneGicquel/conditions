package org.example;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        System.out.println(
                "\nBonjour, voici mes rÃ©ponses au test d'algo WHILE en Java. "
                + "\nBien Ã  vous, "
                + "\nAnne Gicquel\n\n "
        );
        exo1();
        exo2();
        exo3();
        exo4();
        exo5();
        exo6();
        exo7();
        exo8();
        exo9();
        exo10();
    }

    /* 1- Ecrire un algorithme qui demande Ã  lâ€™utilisateur un nombre compris entre 1 et 3 jusquâ€™Ã  ce
    que la rÃ©ponse convienne.*/
    public static void exo1() {
        System.out.println("ðŸŸ¡ exo1()");
        Scanner userInput = new Scanner(System.in);
        int number;
        do {
            System.out.println("Veuillez saisir un nombre entre 1 et 3 : ");
            number = userInput.nextInt();
        } while (number < 1 || number > 3);
        System.out.println("Vous avez choisi le nombre : " + number);
    }

    /* 2- Ecrire un algorithme qui demande un nombre compris entre 10 et 20, jusquâ€™Ã  ce que la
     rÃ©ponse convienne. En cas de rÃ©ponse supÃ©rieure Ã  20, on fera apparaÃ®tre un message :
     Â« Plus petit ! Â», et inversement, Â« Plus grand ! Â» si le nombre est infÃ©rieur Ã  10.*/
    public static void exo2() {
        System.out.println("ðŸŸ¡ exo2()");
        Scanner userInput = new Scanner(System.in);
        int number;
        do {
            System.out.println("Veuillez saisir un nombre entre 10 et 20 : ");
            number = userInput.nextInt();
            if (number < 10) {
                System.out.println("Plus grand !");
            } else if (number > 20) {
                System.out.println("Plus petit !");
            }
        }while (number < 10 || number > 20) ;
            {
                System.out.println("Votre numÃ©ro est le : " + number + " .");
            }
        }

/* 3- Ecrire un algorithme qui demande successivement plusieurs nombres Ã  lâ€™utilisateur, et qui lui
 dise ensuite quel Ã©tait le plus grand parmi ces nombres et sa position :
 La saisie des nombres sâ€™arrÃªte lorsque lâ€™utilisateur entre un zÃ©ro.*/
public static void exo3() {
        System.out.println("ðŸŸ¡ exo3()");
        Scanner userInput = new Scanner(System.in);
        int number;
        int max = Integer.MIN_VALUE;
        System.out.println("Veuillez saisir un nombre : ");
        do {
            number = userInput.nextInt();
            if (number != 0) {
                System.out.println("Ce n'est pas le rÃ©sultat attendu ! \nVeuillez saisir un nouveau nombre :");
                if (number > max) {
                    max = number;
                }
            }
        } while (number != 0) ;
            {
                System.out.println("BRAVO ! Le rÃ©sultat attendu Ã©tait " + number + " !!");
                System.out.println("Aussi, sachez que le plus grand nombre saisi Ã©tait le : " + max + ".");
            }
        }

/* 4- Lire la suite des prix (en euros entiers et terminÃ©e par zÃ©ro) des achats dâ€™un client. Calculer
 la somme quâ€™il doit, lire la somme quâ€™il paye, et simuler la remise de la monnaie en
 affichant les textes "10 Euros", "5 Euros" et "1 Euro" autant de fois quâ€™il y a de coupures de
 chaque sorte Ã  rendre.*/
public static void exo4() {
    System.out.println("ðŸŸ¡ exo4()");
    Scanner userInput = new Scanner(System.in);
    int price;
    int pricesList = 0;

    System.out.println("Veuillez saisir vos achats : ");
    do {
        System.out.println("Quel est le prix de votre article ?");
        price = userInput.nextInt();
        pricesList += price;
    }while (price != 0);{
        // somme des prix
        System.out.println("Voici le total de vos achats : " + pricesList + " .\n");
    }
    System.out.println("Quelle somme donnez-vous pour payer : ");
    int money = userInput.nextInt();

    int diff =  money - pricesList;
    System.out.println("Je dois vous rendre : " + diff);

    while (diff != 0) {
        if (diff >= 10) {
            System.out.println("Voici 10 euros");
            diff -= 10;
        } else if (diff >= 5) {
            System.out.println("Voici 5 euros");
            diff -= 5;
        } else {
            System.out.println("Voici 1 euro");
            diff -= 1;
        }
    }
    System.out.println("La somme a bien Ã©tÃ© rendue car je vous dois : " + diff + " .");
}

/* 5- Ecrire un algorithme qui permet de retrouver le maximum, le minimum ainsi que la somme
 dâ€™une liste de nombres positifs saisis par lâ€™utilisateur. La fin de la liste est indiquÃ©e par un
 nombre nÃ©gatif. La longueur de la liste nâ€™est pas limitÃ©e.*/

public static void exo5() {
    System.out.println("ðŸŸ¡ exo5()");
    Scanner userInput = new Scanner(System.in);
    int number = 0;
    int totalNumber = 0;
    int max = Integer.MIN_VALUE;
    int min = Integer.MAX_VALUE;
    System.out.println("Vous allez constituer un suite de nombre. ");

    do {
        System.out.println("Veuillez saisir un nombre :");
        number = userInput.nextInt();
        if (number > 0 ){
        totalNumber += number;
            if (number > max) {
                max = number;
                System.out.println("max :" + max);
            }
            else if (number < min) {
                min = number;
                System.out.println("min :" + min );
            }
        }
    } while (number > 0);
    {
        System.out.println("La saisie des nombre s'arrÃªte car vous avez saisi un nombre nÃ©gatif : " + number + " .");
        System.out.println("Voici le total des nombres saisies : " + totalNumber + " .");
        System.out.println("Voici le nombre le plus grand saisi : " + max + " .");
        System.out.println("Et enfin, voici le plus petit nombre saisi : " + min + " .");
    }
}

/* 6- Ecrire un algorithme qui permet dâ€™essayer de deviner la valeur dâ€™un nombre entier cachÃ©. Si la
 valeur saisie est supÃ©rieure ou infÃ©rieure, la machine affiche respectivement "câ€™est moins" ou
 "câ€™est plus" jusquâ€™Ã  soi que le nombre soit trouvÃ© ou que lâ€™utilisateur abandonne la recherche.
 On suppose que celui qui saisit le nombre cachÃ© (qui ne sera pas affichÃ©) nâ€™est pas celui qui le
 cherche.*/
public static void exo6() {
    System.out.println("ðŸŸ¡ exo6()");
    Scanner userInput = new Scanner(System.in);
    int secretNumber = 888;
    int guess;

    System.out.println("PrÃªtÂ·e Ã  renseigner des supposition pour le nombre mystÃ¨re ? ");
    do{
        System.out.println("Saisissez votre proposition de nombre entier : ");
        guess = userInput.nextInt();
        if (guess < secretNumber){
            System.out.println("Câ€™est PLUS !");
        }
        else if (guess > secretNumber){
            System.out.println("Câ€™est MOINS !");
        }
    }while (guess != secretNumber); {
        System.out.println("BRAVO !!! Vous avez trouvÃ© le nombre mystÃ¨re qui est : " + secretNumber + " .");
    }
}

/* 7- Ã‰crire un algorithme qui demande Ã  l'utilisateur un nombre et qui affiche les nombres
de 1 jusquâ€™Ã  ce nombre.*/
    public static void exo7() {
        System.out.println("ðŸŸ¡ exo7()");
        Scanner userInput = new Scanner(System.in);
        int number;
        int one = 1;

        System.out.println("Donner un nombre :");
        number = userInput.nextInt();

        do{
            System.out.println(one);
            one += 1;
        } while (one <= number );{
            System.out.println("Vous trouverez ci-dessus le chemin allant de 1 jusqu'au nombre que vous avez donnÃ©. ");
        }
    }

/* 8- Ã‰crivez un programme pour entrer un nombre de l'utilisateur et comptez le nombre de
  chiffres dans l'entier donnÃ© en utilisant une boucle WHILE.
  Ex :
  Saisir un nombre : 2020
  Nombre de chiffres : 4 */

public static void exo8() {
    System.out.println("ðŸŸ¡ exo8()");
    Scanner userInput = new Scanner(System.in);
    int number;
    int digit = 0;
    System.out.println("Veuillez saisir un nombre :");
    number = userInput.nextInt(); // 100

    while (number != 0 ){
        number = number/10;
        digit += 1;
    }
    System.out.println("Il y a " + digit + " chiffres dans le nombre que vous venez de saisir. ");
}

/* 9- Un programme pose une question Ã  laquelle lâ€™utilisateur doit rÃ©pondre par O (Oui) ou N
  (Non). Il se peut que lâ€™utilisateur tape autre chose que la rÃ©ponse attendue. DÃ¨s lors, le
  programme peut planter. Ã‰crire un algorithme qui repose la mÃªme question jusquâ€™Ã  lâ€™une des
  deux rÃ©ponses attendues soit saisie au clavier par lâ€™utilisateur.
  Cela sâ€™appelle un contrÃ´le de saisie.*/

    public static void exo9() {
        System.out.println("ðŸŸ¡ exo9()");
        Scanner userInput = new Scanner(System.in);
        int answer;

        System.out.println("S'il vous plaÃ®t, veuillez rÃ©pondre par OUI avec : 0 ou NON avec : 1 .");
        do{
            System.out.println("Ai-je rendu des exercices avec, dans l'ensemble, des rÃ©ponses convenables ?");
            answer = userInput.nextInt();
        } while (answer != 0 && answer != 1) ;
        {
            System.out.println("Merci d'avoir rÃ©pondu par OUI (n'est-ce pas ? :-)) ! ");
        }
    }

/* 10- Ã‰crivez un programme pour saisir un nombre de l'utilisateur et recherchez le premier et le
 dernier chiffre d'un nombre en utilisant une boucle WHILE.
 EX :
 DonnÃ©es d'entrÃ©e
 Saisir un nombre : 1987
 DonnÃ©es de sortie
  Premier chiffre = 1 Dernier chiffre = 7 */

    public static void exo10() {
        System.out.println("ðŸŸ¡ exo10()");
        Scanner userInput = new Scanner(System.in);
        int number;
        int lastDigit;
        int firstDigit = 0;
        System.out.println("Veuillez saisir un nombre :");
        number = userInput.nextInt();
        lastDigit = number % 10;

        while (number != 0) {
            firstDigit = number % 10;
            number /= 10;
        }
        System.out.println("Le premier chiffre est : " + firstDigit + " et le dernier : " + lastDigit + " .");
    }

}